// Generated by CoffeeScript 1.10.0
var _, chai, challengeUtils, expect, subject;

chai = require("chai");

subject = require("../../challenges/challenge2");

challengeUtils = require("../../challenges/challengeUtils");

_ = require("underscore");

expect = chai.expect;

describe('challenge2', function() {
  it('returns a string of FBLR for instructions', function() {
    var challenge;
    challenge = subject.challenge();
    expect(challenge.question.instructions.length).to.be.above(0);
    return _.each(challenge.question.instructions, function(char) {
      return expect(['F', 'B', 'L', 'R']).to.include(char);
    });
  });
  it('provides startX and startY as numbers', function() {
    var challenge;
    challenge = subject.challenge();
    expect(challenge.question.startX).to.be.a('number');
    return expect(challenge.question.startY).to.be.a('number');
  });
  return it('provides correct endX and endY', function() {
    var a, challenge, expectedEndX, expectedEndY, instructions, q, ref;
    challenge = subject.challenge();
    q = challenge.question;
    a = challenge.answer;
    instructions = q.instructions.split('');
    ref = challengeUtils.calculateEndPosition(instructions, [q.startX, q.startY]), expectedEndX = ref[0], expectedEndY = ref[1];
    expect(a.endX).to.equal(expectedEndX);
    return expect(a.endY).to.equal(expectedEndY);
  });
});
